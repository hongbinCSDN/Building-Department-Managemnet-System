@model MWMS2.Areas.Registration.Models.Fn09SC_SCModel
<div id="searchCriteria" class="displayForm">
    @Html.HiddenFor(model => model.UUID, new { @id = "UUID" })
    <div class="panelHeader">Personal Information</div>
    <div class=" w3-row">
        <div class="w3-col l6 m12 s12">
            <div class="w3-col l6 m12 s12">English Name :</div>
            <div class="w3-col l6 m12 s12">
                @Model.Eng_Full_Name
            </div>
        </div>
        <div class="w3-col l6 m12 s12">
            <div class="w3-col l6 m12 s12">Chinese Name :</div>
            <div class="w3-col l6 m12 s12">
                @Model.Chinese_Name
            </div>
        </div>
    </div>
    <br />
    <div class="panelHeader">Company Information</div>


    <div id="companyInfoList">

    </div>

    <br />
    <div class="panelHeader">Individual Information</div>


    <div id="IndInfoList">

    </div>

    <br />
    <div class="panelHeader">Offense</div>
    <div id="OffenseList">
    </div>
    <br />
    <div class="panelHeader">Course detail</div>
    <div class="displayForm">
        <div id="courseList">

        </div>
        <div class="w3-row" id="Total">
            <div class="w3-col l12 m12 s12">
                <div class="w3-col l9 m12 s12">Total Score :</div>
                <div class="w3-col l3 m12 s12">
                    <div id="TotalScore"></div>
                </div>
            </div>
        </div>
        <div id="courseForm" style="display:none">
            <div class="panelHeader">Add New Course</div>
            <table class="w3-table-all w3-hoverable resultTable">
                <thead>
                    <tr>
                        <th>Course Name</th>
                        <th>Course Issue Date</th>
                        <th>Score</th>
                    </tr>
                </thead>
                <tbody id="courseInput"></tbody>
            </table>
        </div>
        @*<div id="editCourseForm" style="display:none">

        </div>*@
        <div class="w3-container footer">
            <button id="addBtn" class="btn btn-default" type="button" onclick="Add()"><i class="far fa-plus-square"></i> Add</button>
            <button id="addCourseBtn" class="btn btn-default" type="button" style="display:none;"><i class="far fa-plus-square"></i> Add</button>
            <button id="removeScoreBtn" class=" btn btn-default" type="button" style="display:none;"><i class="fa fa-trash"></i> Remove</button>
            <button id="saveBtn" class="btn btn-default" type="button" style="display:none;"><i class="fa fa-save"></i> Save</button>
            <button id="cancelBtn" class=" btn btn-default" type="button" onclick="Cancel()" style="display:none;"><i class="fa fa-times"></i> Cancel</button>
            <button class=" btn btn-default" type="button" onclick="window.location.href='Index'"><i class="fa fa-arrow-left"></i> Back</button>
        </div>
    </div>
</div>

<script type="text/javascript">
 
    domReady(function () {
        new searcher({
            searchPath: "SearchOffenceList"
            , searchTable: "searchCriteria"
            , resultPanel: "OffenseList"
            , Columns: [
                {
                    displayName: "Offense Name", columnName: "WL_TYPE_OF_OFFENSE_ENG"
                }
                , {
                    displayName: "Score", columnName: "SCORE"
                }
            ]
        }).search();

        new searcher({
            searchPath: "SearchCompanyInfo"
            , searchTable: "searchCriteria"
            , resultPanel: "companyInfoList"
            , Columns: [
                {
                    displayName: "File Reference No.", columnName: "FILE_REFERENCE_NO"
                }
                , {
                    displayName: "English Company Name", columnName: "ENGLISH_COMPANY_NAME"
                }
                ,
                {
                    displayName: "Chinese Company Name", columnName: "CHINESE_COMPANY_NAME"
                }
                , {
                    displayName: "Removal Date", columnName: "REMOVAL_DATE"
                }
                , {
                    displayName: "Expiry Date", columnName: "EXPIRY_DATE"
                }


            ]
        }).search();



        new searcher({
            searchPath: "SearchIndInfo"
            , searchTable: "searchCriteria"
            , resultPanel: "IndInfoList"
            , Columns: [
                {
                    displayName: "File Reference No.", columnName: "FILE_REFERENCE_NO"
                }
          
                , {
                    displayName: "Expiry Date", columnName: "EXPIRY_DATE"
                }

                , {
                    displayName: "Status", columnName: "ENGLISH_DESCRIPTION"
                }



            ]
        }).search();
    });
</script>
<script type="text/javascript">
    var courseListModel;
    domReady(function () {
        courseListModel = new searcher({
            searchPath: "SearchCourseList"
            , searchTable: "searchCriteria"
            , resultPanel: "courseList"
            , Columns: [
                {
                    displayName: "Course Name", /*columnName: "COURSE_NAME"*/
                    formater: function (row, idx) {
                        return dom("input", [{ type: "text" }, { value: row.COURSE_NAME }, { id: "CourseName" + idx }, {disabled:"disabled"}])
                    }
                }
                , {
                    displayName: "Course Issue Date", /*columnName: "COURSE_ISSUE_DT"*/
                    formater: function (row, idx) {
                        console.log(row);
                        return dom("input", [{ type: "text" }, { value: row.COURSE_ISSUE_DT_DATE_DISPLAY }, { id: "CourseDate" + idx }, { disabled: "disabled" }, {
                            Class: "inputDate inpuDateEdit flatpickr-input"
                        }])
                    }
                }
                , {
                    displayName: "Course Score", /*columnName: "COURSE_SCORE"*/
                    formater: function (row, idx) {
                        return dom("input", [{ type: "text" }, { value: row.COURSE_SCORE }, { id: "CourseScore" + idx }, { disabled: "disabled" }])
                    }
                    
                }
                , {
                    displayName: "&nbsp;", formater: function (row, idx) {
                        return createButton("Edit", null, [{
                            "onclick": {
                                parameter: { row: row,idx:idx }, callback: function (d, p, e) {
                                    if (row == null) return;
                                    if (document.getElementById('Edit' + idx).innerHTML.indexOf("Save") == -1 ) {
                                        attr("CourseName" + idx, "disabled", "");
                                        attr("CourseDate" + idx, "disabled", "");
                                        attr("CourseScore" + idx, "disabled", "");
                                        attr("CourseScore" + idx, "type", "number");
                                        attr("Edit" + idx, "html", "Save");
                                        
                                    }
                                    else {
                                        if (document.getElementById('CourseName' + idx).value == "" || document.getElementById('CourseDate' + idx).value == ""||document.getElementById('CourseScore' + idx).value == "") {
                                            alert("Please enter Couse Name, Date and Course Score");

                                        }
                                        else {
                                            var value = Number(document.getElementById('CourseScore' + idx).value);
                                            //if ($('#courseScore-' + idx).val() < 0 || $('#courseScore-' + idx).val() > 999  || isNaN($('#courseScore-' + idx).val()) || parseFloat($('#courseScore-' + idx).val()) % 1 !== 0)
                                            if ($('#CourseScore' + idx).val() < 0 || $('#CourseScore' + idx).val() > 999 || Math.floor(value) != value) {
                                                alert("The score of the course should be between 0 and  999");
                                            }
                                            else {
                                                attr("CourseName" + idx, "disabled", "disabled");
                                                attr("CourseDate" + idx, "disabled", "disabled");
                                                attr("CourseScore" + idx, "disabled", "disabled");
                                                $.ajax({
                                                    url: "UpdateCourseSource"
                                                    , type: "POST"
                                                    , data: {
                                                        UUID: row.UUID
                                                        , CourseName: $('#CourseName' + idx).val()
                                                        , CourseDate: $('#CourseDate' + idx).val()
                                                        , CourseScore: $('#CourseScore' + idx).val()
                                                    }
                                                    , success: function (data) {
                                                        if (data != null && data.Result == "SUCCESS") {
                                                            attr("Edit" + idx, "html", "Edit");
                                                            courseListModel.search();
                                                        }
                                                        else {
                                                            alert("Update Failed.");
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                        
                                        
                                    }
                                }
                            }
                            ,"id":"Edit"+idx
                        }]);
                    }
                }
                , {
                    displayName: "&nbsp;", formater: function (row, idx) {
                        return createButton("Delete", "fa-trash", [{
                            "onclick": {
                                parameter: { row: row, idx: idx }, callback: function (d, p, e) {
                                    if (confirm("Are you sure to delete this item")) {
                                        $.ajax({
                                            url: "DeleteCourse"
                                            , type: "POST"
                                            , data: {
                                                UUID:row.UUID
                                            }
                                            , success: function (data) {
                                                if (data != null && data.Result == "SUCCESS") {
                                                    courseListModel.search();
                                                }
                                                else {
                                                    alert("Delete Failed.");
                                                }
                                            }
                                        })
                                    }
                                }
                            }
                        }]);
                    }
                }
            ]
            , onAfterSearch: function (r) {
                $.ajax({
                    url: 'CalculateTotalScore'
                    , type: 'POST'
                    , data: {
                        uuid: $('#UUID').val()
                    }
                    , success: function (data) {
                        datepickize('.inputDate');
                        if (data != null && data.Result == "SUCCESS") {
                            attr("TotalScore", "html", data.Data);
                        }
                    }
                });
            }
        });
        courseListModel.search();


        var counter = 0;
        var btn = document.getElementById("addCourseBtn");
        var form = document.getElementById("courseInput");
        var addInput = function () {
            counter++;
            var tr = document.createElement("tr");
            var td1 = document.createElement("td");
            var td2 = document.createElement("td");
            var td3 = document.createElement("td");
            var input1 = document.createElement("input");
            var input2 = document.createElement("input");
            var input3 = document.createElement("input");

            tr.id = 'tr-' + counter;
            tr.appendChild(td1); tr.appendChild(td2); tr.appendChild(td3);
            //tr.append(td1); tr.append(td2); tr.append(td3);
            td1.appendChild(input1); td2.appendChild(input2); td3.appendChild(input3);
            input1.id = "courseName-" + counter;
            input1.type = 'text';
            input2.id = "courseIssueDate-" + counter;
            input2.type = 'text';
            input2.className = 'inputDate inputDateAdd';
            input3.id = 'courseScore-' + counter;
            input3.className = "courseScore";
            input3.type = 'number';
            form.appendChild(tr);
        };
        btn.addEventListener('click', function () {
            addInput();
            var dates = getDates();
            datepickize('.inputDateAdd');
            setDates(dates);
        }.bind(this));

        function getDates() {
            console.log("counter: " + counter);
            var dates = [];
            if (counter > 1) {
                for (var i = 1; i < counter; i++) {
                    dates[i - 1] = document.getElementById("courseIssueDate-" + i).value;
                }
            }
            console.log(dates);
            return dates;
        }

        function setDates(dates) {
            console.log(dates);
            if (counter > 1) {
                for (var i = 1; i < counter; i++) {
                    document.getElementById("courseIssueDate-" + i).value = dates[i - 1];
                }
            }
        }

        $('#removeScoreBtn').click(function () {
            if (counter == 1) {
                alert("No more textbox to remove.");
                return false;
            }
            $('#tr-' + counter).remove();
            counter--;
        });

        $('#cancelBtn').click(function () {
            for (i = 1; i <= counter; i++) {
                $('#tr-' + i).remove();
            }
            counter = 0;
        });

        $('#saveBtn').click(function () {
            var courseNameList = new Array();
            var courseIssueDateList = new Array();
            var courseScoreList = new Array();
            var message = null;
            for (i = 1; i <= counter; i++) {
                //if ($('#courseScore-' + i).val() < 0 ||$('#courseScore-' + i).val() > 999 || isNaN( $('#courseScore-' + i).val()) || parseFloat($('#courseScore-' + i).val()) % 1 !== 0)
                var value = Number(document.getElementById('courseScore-' + i).value);

                if ($('#courseScore-' + i).val() < 0 || $('#courseScore-' + i).val() > 999 || Math.floor(value) != value)
                {
                    message = "The score of the course should be integer and  between 0 and  999  or";
                }
           


                if ($('#courseName-' + i).val() == null || $('#courseName-' + i).val() == '')
                    message = "Course Name";
                if ($('#courseIssueDate-' + i).val() == null || $('#courseIssueDate-' + i).val() == '')
                    message = message == null ? "Course Issue Date" : message + ", Course Issue Date";
                if ($('#courseScore-' + i).val() == null || $('#courseScore-' + i).val() == '')
                    message = message == null ? "Course Score" : message + ", Course Score";
                if (message != null) {
                    message += " should not be empty.";
                    alert(message);
                    return false;
                }
                courseNameList[i - 1] = $('#courseName-' + i).val();
                courseIssueDateList[i - 1] = $('#courseIssueDate-' + i).val();
                courseScoreList[i - 1] = $('#courseScore-' + i).val();
            }

            $.ajax({
                url: "AddNewCourse"
                , type: "POST"
                , data: {
                    UUID: $('#UUID').val()
                    , CourseNameList: courseNameList
                    , CourseIssueDateList: courseIssueDateList
                    , CourseScoreList: courseScoreList
                }
                , success: function (data) {
                    if (data != null && data.Result == "SUCCESS") {
                        $('#courseForm').css('display', 'none');
                        $('#addBtn').css('display', '')
                        $('#addCourseBtn').css('display', 'none');
                        $('#removeScoreBtn').css('display', 'none');
                        $('#saveBtn').css('display', 'none');
                        $('#cancelBtn').css('display', 'none');
                        alert(data.Message[0]);
                        for (i = 1; i <= counter; i++) {
                            $('#tr-' + i).remove();
                        }
                        counter = 0;
                        courseListModel.search();
                    } else {
                        alert(data.Message[0])
                    }
                }
            })
        });



    });
</script>
<script>
    function Add() {
        $('#addCourseBtn').click();
        $('#courseForm').css('display', '');
        $('#addBtn').css('display', 'none');
        $('#addCourseBtn').css('display', '');
        $('#removeScoreBtn').css('display', '');
        $('#saveBtn').css('display', '');
        $('#cancelBtn').css('display', '');
    }
    function Cancel() {
        $('#courseForm').css('display', 'none');
        $('#addBtn').css('display', '')
        $('#addCourseBtn').css('display', 'none');
        $('#removeScoreBtn').css('display', 'none');
        $('#saveBtn').css('display', 'none');
        $('#cancelBtn').css('display', 'none');
    }

</script>
