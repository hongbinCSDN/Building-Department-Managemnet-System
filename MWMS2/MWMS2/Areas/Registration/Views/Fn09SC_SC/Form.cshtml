@model MWMS2.Areas.Registration.Models.Fn09SC_SCModel

<div id="searchCriteria" class="displayForm">
    @Html.HiddenFor(x => x.FormUuid)
    @Html.HiddenFor(x => x.FormType)

    <div class="panelHeader">@Model.FormType Information</div>
    <div class="w3-row">
        <div class="w3-col l12 m12 s12">
            <div class="w3-col l3 m12 s12">File Reference :</div>
            <div class="w3-col l9 m12 s12">
                @Model.FormFileRef
            </div>
        </div>
    </div>
    @if ("Company".Equals(Model.FormType))
    {
        <div class="w3-row">
            <div class="w3-col l12 m12 s12">
                <div class="w3-col l3 m12 s12">Company Name (English) :</div>
                <div class="w3-col l9 m12 s12">
                    @Model.C_COMP_APPLICATION.ENGLISH_COMPANY_NAME
                </div>

            </div>
        </div>
        <div class="w3-row">
            <div class="w3-col l12 m12 s12">
                <div class="w3-col l3 m12 s12">Company Name (Chinese) :</div>
                <div class="w3-col l9 m12 s12">
                    @Model.C_COMP_APPLICATION.CHINESE_COMPANY_NAME
                </div>

            </div>
        </div>
    }
    else if ("Individual".Equals(Model.FormType))
    {
        <div class="w3-row">
            <div class="w3-col l12 m12 s12">
                <div class="w3-col l3 m12 s12">Surname :</div>
                <div class="w3-col l3 m12 s12">
                    @Model.C_APPLICANT.SURNAME
                </div>
                <div class="w3-col l3 m12 s12">Given Name :</div>
                <div class="w3-col l3 m12 s12">
                    @Model.C_APPLICANT.GIVEN_NAME_ON_ID
                </div>

            </div>
        </div>
        <div class="w3-row">
            <div class="w3-col l12 m12 s12">
                <div class="w3-col l3 m12 s12">Chinese Name :</div>
                <div class="w3-col l9 m12 s12">
                    @Model.C_APPLICANT.CHINESE_NAME
                </div>
            </div>
        </div>
    }
    @if ("Company".Equals(Model.FormType))
    {
        <br />

        <div class="panelHeader">Authorized Signatory</div>
        <div class="w3-border displayForm">
            <div id="Company">
                <table class="resultTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Total Score</th>
                            <th>Total Course Score</th>
                            <th>Net Score</th>
                            <th>Subject</th>
                            <th>Issue Date</th>
                            <th>Score</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.AS_List != null)
                        {
                            foreach (var currentAS in Model.AS_List)
                            {
                                bool showName = true;
                                bool showPeriod = true;

                                foreach (var letters in Model.WL_List_by_AL)
                                {
                                    var rowSpanName = letters.Count() + 2;
                                    var rowSpanPeriod = letters.Count();

                                    var totalScore = 15 * letters.Count();<!-- *** -->
                                    var totalCourseScore = -45;
                                    if (currentAS.GIVEN_NAME_ON_ID == "Soo Fung") { totalCourseScore = -15; } <!-- *** -->

                                    foreach (var letter in letters)
                                    {
                                        if (letter.AS_UUID == currentAS.UUID)
                                        {
                                            <tr>
                                                @if (showName)
                                                {
                                                    <td rowspan='@rowSpanName'>@currentAS.SURNAME @currentAS.GIVEN_NAME_ON_ID</td>
                                                }
                                                @if (showPeriod)
                                                {
                                                    <td rowspan='@rowSpanPeriod'>1/10/2017</td> <!-- *** -->
                                                    <td rowspan='@rowSpanPeriod'>30/09/2020</td> <!-- *** -->

                                                    <td rowspan='@rowSpanPeriod'>@totalScore</td>
                                                    <td rowspan='@rowSpanPeriod'>@totalCourseScore</td>
                                                    <td rowspan='@rowSpanPeriod'>0</td>
                                                }
                                                <td>@letter.SUBJECT</td>
                                                <td>@letter.LETTER_ISSUE_DATE</td>
                                                <td>15</td>
                                            </tr>
                                            showPeriod = false;
                                            showName = false;
                                        }
                                    }
                                }
                                <!-- *** -->
                                <tr>
                                    @*<td>@currentAS.SURNAME @currentAS.GIVEN_NAME_ON_ID</td>*@
                                    <td>1/10/2014</td>
                                    <td>30/09/2017</td>
                                    <td>0</td>
                                    <td>0</td>
                                    <td>0</td>
                                    <td>-</td>
                                    <td>-</td>
                                    <td>0</td>
                                </tr>
                                <tr>
                                    @*<td>@currentAS.SURNAME @currentAS.GIVEN_NAME_ON_ID</td>*@
                                    <td>1/10/2011</td>
                                    <td>30/09/2014</td>
                                    <td>0</td>
                                    <td>0</td>
                                    <td>0</td>
                                    <td>-</td>
                                    <td>-</td>
                                    <td>0</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr><td>-</td></tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else if ("Individual".Equals(Model.FormType))
    {
        <br />
        <div class="panelHeader">Authorized Signatory</div>
        <div class="w3-border displayForm">
            <div id="Individual">
                <table class="resultTable">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Total Score</th>
                            <td>Total Course Score</td>
                            <td>Net Score</td>
                            <th>Subject</th>
                            <th>Issue Date</th>
                            <th>Score</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.WL_List != null && Model.WL_List.Count() > 0)
                        {

                        }
                    </tbody>
                </table>
            </div>
        </div>

    }

    <br />
    <div class="panelHeader">Course Detail</div>
    <div class="displayForm">
        <div @*id="courseList"*@>
            <table class="resultTable">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Course Name</th>
                        <th>Course Issue Date</th>
                        <th>Course Score</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td rowspan='3'>LAI Kwong Sang</td>
                        <td>Course Name</td>
                        <td>30/11/2018</td>
                        <td>-15</td>
                    </tr>
                    <tr>
                        <td>Course Name</td>
                        <td>12/12/2018</td>
                        <td>-15</td>
                    </tr>
                    <tr>
                        <td>Course Name</td>
                        <td>22/12/2018</td>
                        <td>-15</td>
                    </tr>
                    <tr>
                        <td>WONG Soo Fung</td>
                        <td>Course Name</td>
                        <td>15/12/2018</td>
                        <td>-15</td>
                    </tr>
                </tbody>
            </table>
        </div>
        @*<div class="w3-row" id="Total">
            <div class="w3-col l12 m12 s12">
                <div class="w3-col l9 m12 s12">Total Score :</div>
                <div class="w3-col l3 m12 s12">
                    <div id="TotalScore"></div>
                </div>
            </div>
        </div>*@

        <div id="courseForm" style="display:none">
            <br />
            <div class="panelHeader">Add New Course</div>
            <table class="w3-table-all w3-hoverable resultTable">
                <thead>
                    <tr>
                        <th>AS</th>
                        <th>Course Name</th>
                        <th>Course Issue Date</th>
                        <th>Course Score</th>
                    </tr>
                </thead>
                <tbody id="courseInput"></tbody>
            </table>
        </div>
        @*<div id="editCourseForm" style="display:none">

            </div>*@
        <div class="w3-container footer">
            <button id="addBtn" class="btn btn-default" type="button" onclick="Add()"><i class="far fa-plus-square"></i> Add</button>
            <button id="addCourseBtn" class="btn btn-default" type="button" style="display:none;"><i class="far fa-plus-square"></i> Add</button>
            <button id="removeScoreBtn" class=" btn btn-default" type="button" style="display:none;"><i class="fa fa-trash"></i> Remove</button>
            <button id="saveBtn" class="btn btn-default" type="button" style="display:none;"><i class="fa fa-save"></i> Save</button>
            <button id="cancelBtn" class=" btn btn-default" type="button" onclick="Cancel()" style="display:none;"><i class="fa fa-times"></i> Cancel</button>
            <button class=" btn btn-default" type="button" onclick="window.location.href='Index'"><i class="fa fa-arrow-left"></i> Back</button>
        </div>
    </div>
</div>

<script type="text/javascript">
    function Add() {
        $('#addCourseBtn').click();
        $('#courseForm').css('display', '');
        $('#addBtn').css('display', 'none');
        $('#addCourseBtn').css('display', '');
        $('#removeScoreBtn').css('display', '');
        $('#saveBtn').css('display', '');
        $('#cancelBtn').css('display', '');
    }
    function Cancel() {
        $('#courseForm').css('display', 'none');
        $('#addBtn').css('display', '')
        $('#addCourseBtn').css('display', 'none');
        $('#removeScoreBtn').css('display', 'none');
        $('#saveBtn').css('display', 'none');
        $('#cancelBtn').css('display', 'none');
    }

    var courseListModel;
    domReady(function () {
        courseListModel = new searcher({
            searchPath: "SearchCourseList"
            , searchTable: "searchCriteria"
            , resultPanel: "courseList"
            , Columns: [
                {
                    displayName: "Course Name", /*columnName: "COURSE_NAME"*/
                    formater: function (row, idx) {
                        return dom("input", [{ type: "text" }, { value: row.COURSE_NAME }, { id: "CourseName" + idx }, { disabled: "disabled" }])
                    }
                }
                , {
                    displayName: "Course Issue Date", /*columnName: "COURSE_ISSUE_DT"*/
                    formater: function (row, idx) {
                        console.log(row);
                        return dom("input", [{ type: "text" }, { value: row.COURSE_ISSUE_DT_DATE_DISPLAY }, { id: "CourseDate" + idx }, { disabled: "disabled" }, {
                            Class: "inputDate inpuDateEdit flatpickr-input"
                        }])
                    }
                }
                , {
                    displayName: "Course Score", /*columnName: "COURSE_SCORE"*/
                    formater: function (row, idx) {
                        return dom("input", [{ type: "text" }, { value: row.COURSE_SCORE }, { id: "CourseScore" + idx }, { disabled: "disabled" }])
                    }

                }
                , {
                    displayName: "&nbsp;", formater: function (row, idx) {
                        return createButton("Edit", null, [{
                            "onclick": {
                                parameter: { row: row, idx: idx }, callback: function (d, p, e) {
                                    if (row == null) return;
                                    if (document.getElementById('Edit' + idx).innerHTML.indexOf("Save") == -1) {
                                        attr("CourseName" + idx, "disabled", "");
                                        attr("CourseDate" + idx, "disabled", "");
                                        attr("CourseScore" + idx, "disabled", "");
                                        attr("CourseScore" + idx, "type", "number");
                                        attr("Edit" + idx, "html", "Save");

                                    }
                                    else {
                                        if (document.getElementById('CourseName' + idx).value == "" || document.getElementById('CourseDate' + idx).value == "" || document.getElementById('CourseScore' + idx).value == "") {
                                            alert("Please enter Couse Name, Date and Course Score");

                                        }
                                        else {
                                            var value = Number(document.getElementById('CourseScore' + idx).value);
                                            //if ($('#courseScore-' + idx).val() < 0 || $('#courseScore-' + idx).val() > 999  || isNaN($('#courseScore-' + idx).val()) || parseFloat($('#courseScore-' + idx).val()) % 1 !== 0)
                                            if ($('#CourseScore' + idx).val() < 0 || $('#CourseScore' + idx).val() > 999 || Math.floor(value) != value) {
                                                alert("The score of the course should be between 0 and  999");
                                            }
                                            else {
                                                attr("CourseName" + idx, "disabled", "disabled");
                                                attr("CourseDate" + idx, "disabled", "disabled");
                                                attr("CourseScore" + idx, "disabled", "disabled");
                                                $.ajax({
                                                    url: "UpdateCourseSource"
                                                    , type: "POST"
                                                    , data: {
                                                        UUID: row.UUID
                                                        , CourseName: $('#CourseName' + idx).val()
                                                        , CourseDate: $('#CourseDate' + idx).val()
                                                        , CourseScore: $('#CourseScore' + idx).val()
                                                    }
                                                    , success: function (data) {
                                                        if (data != null && data.Result == "SUCCESS") {
                                                            attr("Edit" + idx, "html", "Edit");
                                                            courseListModel.search();
                                                        }
                                                        else {
                                                            alert("Update Failed.");
                                                        }
                                                    }
                                                });
                                            }
                                        }


                                    }
                                }
                            }
                            , "id": "Edit" + idx
                        }]);
                    }
                }
                , {
                    displayName: "&nbsp;", formater: function (row, idx) {
                        return createButton("Delete", "fa-trash", [{
                            "onclick": {
                                parameter: { row: row, idx: idx }, callback: function (d, p, e) {
                                    if (confirm("Are you sure to delete this item")) {
                                        $.ajax({
                                            url: "DeleteCourse"
                                            , type: "POST"
                                            , data: {
                                                UUID: row.UUID
                                            }
                                            , success: function (data) {
                                                if (data != null && data.Result == "SUCCESS") {
                                                    courseListModel.search();
                                                }
                                                else {
                                                    alert("Delete Failed.");
                                                }
                                            }
                                        })
                                    }
                                }
                            }
                        }]);
                    }
                }
            ]
            , onAfterSearch: function (r) {
                $.ajax({
                    url: 'CalculateTotalScore'
                    , type: 'POST'
                    , data: {
                        uuid: $('#UUID').val()
                    }
                    , success: function (data) {
                        datepickize('.inputDate');
                        if (data != null && data.Result == "SUCCESS") {
                            attr("TotalScore", "html", data.Data);
                        }
                    }
                });
            }
        });
        courseListModel.search();


        var counter = 0;
        var btn = document.getElementById("addCourseBtn");
        var form = document.getElementById("courseInput");
        var addInput = function () {
            counter++;
            var tr = document.createElement("tr");
            var td0 = document.createElement("td"); // ***
            var td1 = document.createElement("td");
            var td2 = document.createElement("td");
            var td3 = document.createElement("td");

            var input0 = document.createElement("select"); // ***
            var option0 = document.createElement("option");
            option0.innerHTML = "- Please Select -";
            input0.appendChild(option0);
            var option1 = document.createElement("option");
            option1.innerHTML = "LAI Kwong Sang";
            input0.appendChild(option1);
            var option2 = document.createElement("option");
            option2.innerHTML = "WONG Soo Fung";
            input0.appendChild(option2);

            var input1 = document.createElement("input");
            var input2 = document.createElement("input");
            var input3 = document.createElement("input");
            var input4 = document.createElement("input"); // ***
            var input3_w = document.createElement("label");
            var input4_w = document.createElement("label");

            tr.id = 'tr-' + counter;
            tr.appendChild(td0); // ***
            tr.appendChild(td1); tr.appendChild(td2); tr.appendChild(td3);
            //tr.append(td1); tr.append(td2); tr.append(td3);
            td0.appendChild(input0); // ***
            td1.appendChild(input1); td2.appendChild(input2); td3.appendChild(input3);
            td3.appendChild(input3_w); // ***
            td3.appendChild(input4);
            td3.appendChild(input4_w);

            input0.id = "ASName-" + counter;

            input1.id = "courseName-" + counter;
            input1.type = 'text';
            input2.id = "courseIssueDate-" + counter;
            input2.type = 'text';
            input2.className = 'inputDate inputDateAdd';
            input3.id = 'courseScore-' + counter+'A';
            input3.className = "courseScore w3-radio";
            input3.type = 'radio'; // ***
            input3.name = 'courseScore-' + counter; input4.name = 'courseScore-' + counter;
            input4.type = 'radio';
            input4.id = 'courseScore-' + counter + 'A';
            input4.className = "courseScore w3-radio";
            input3_w.innerHTML = " -15 ";
            input3_w.for = 'courseScore-' + counter + 'A';
            input4_w.for = 'courseScore-' + counter + 'B';
            input4_w.innerHTML = " 0";
            
            form.appendChild(tr);
        };
        btn.addEventListener('click', function () {
            addInput();
            var dates = getDates();
            datepickize('.inputDateAdd');
            setDates(dates);
        }.bind(this));

        function getDates() {
            console.log("counter: " + counter);
            var dates = [];
            if (counter > 1) {
                for (var i = 1; i < counter; i++) {
                    dates[i - 1] = document.getElementById("courseIssueDate-" + i).value;
                }
            }
            console.log(dates);
            return dates;
        }

        function setDates(dates) {
            console.log(dates);
            if (counter > 1) {
                for (var i = 1; i < counter; i++) {
                    document.getElementById("courseIssueDate-" + i).value = dates[i - 1];
                }
            }
        }

        $('#removeScoreBtn').click(function () {
            if (counter == 1) {
                alert("No more textbox to remove.");
                return false;
            }
            $('#tr-' + counter).remove();
            counter--;
        });

        $('#cancelBtn').click(function () {
            for (i = 1; i <= counter; i++) {
                $('#tr-' + i).remove();
            }
            counter = 0;
        });

        $('#saveBtn').click(function () {
            var courseNameList = new Array();
            var courseIssueDateList = new Array();
            var courseScoreList = new Array();
            var message = null;
            for (i = 1; i <= counter; i++) {
                //if ($('#courseScore-' + i).val() < 0 ||$('#courseScore-' + i).val() > 999 || isNaN( $('#courseScore-' + i).val()) || parseFloat($('#courseScore-' + i).val()) % 1 !== 0)
                var value = Number(document.getElementById('courseScore-' + i).value);

                if ($('#courseScore-' + i).val() < 0 || $('#courseScore-' + i).val() > 999 || Math.floor(value) != value) {
                    message = "The score of the course should be integer and  between 0 and  999  or";
                }



                if ($('#courseName-' + i).val() == null || $('#courseName-' + i).val() == '')
                    message = "Course Name";
                if ($('#courseIssueDate-' + i).val() == null || $('#courseIssueDate-' + i).val() == '')
                    message = message == null ? "Course Issue Date" : message + ", Course Issue Date";
                if ($('#courseScore-' + i).val() == null || $('#courseScore-' + i).val() == '')
                    message = message == null ? "Course Score" : message + ", Course Score";
                if (message != null) {
                    message += " should not be empty.";
                    alert(message);
                    return false;
                }
                courseNameList[i - 1] = $('#courseName-' + i).val();
                courseIssueDateList[i - 1] = $('#courseIssueDate-' + i).val();
                courseScoreList[i - 1] = $('#courseScore-' + i).val();
            }

            $.ajax({
                url: "AddNewCourse"
                , type: "POST"
                , data: {
                    UUID: $('#UUID').val()
                    , CourseNameList: courseNameList
                    , CourseIssueDateList: courseIssueDateList
                    , CourseScoreList: courseScoreList
                }
                , success: function (data) {
                    if (data != null && data.Result == "SUCCESS") {
                        $('#courseForm').css('display', 'none');
                        $('#addBtn').css('display', '')
                        $('#addCourseBtn').css('display', 'none');
                        $('#removeScoreBtn').css('display', 'none');
                        $('#saveBtn').css('display', 'none');
                        $('#cancelBtn').css('display', 'none');
                        alert(data.Message[0]);
                        for (i = 1; i <= counter; i++) {
                            $('#tr-' + i).remove();
                        }
                        counter = 0;
                        courseListModel.search();
                    } else {
                        alert(data.Message[0])
                    }
                }
            })
        });



    });
</script>