@model MWMS2.Areas.Registration.Models.IndMWItemDisplayModel

@Html.HiddenFor(x => x.SelectedMWItemDetail.m_UUID)
@Html.HiddenFor(x => x.SelectedMWItemDetail.m_Master_ID)
@Html.HiddenFor(x => x.SelectedMWItemDetail.m_Created_Date)
@Html.HiddenFor(x => x.SelectedMWItemDetail.m_STATUS_CODE)
@Html.HiddenFor(x => x.SelectedMWItemDetail.m_Approved_Item)
@*@Html.HiddenFor(x => x.SelectedMWItemDetail.NewVerApprovedItems)
@Html.HiddenFor(x => x.SelectedMWItemDetail.ApprovedItems)*@

<div class="w3-row">
    <div class="w3-col l12 m12 s12">
        <div class="w3-col l2 m6 s12">
            <b>Application History </b>
        </div>
        <div style="text-align:right">
            Versions:
            @Html.DropDownListFor(x => x.SelectedMWItemDetail.m_MWItemSaveVersion, Model.VersionSelector, new { @style = "width:auto", @id = "EditMWItemVersionSelector" })


            @*<select id="EditMWItemVersionSelector" style="width:auto"><option value="Old">Old</option><option value="New">New</option></select>*@
        </div>
    </div>

</div>
<div style="overflow-x:auto;">
    <table class="resultTable">

        <thead>
            <tr>

                <th>
                    App. Date
                </th>
                <th>
                    App. Form
                </th>
                <th>
                    Apply Items / Withdrawn Items(For trade only)
                </th>
                <th>
                    Approved by
                </th>
                <th>
                    Approved Date
                </th>
                <th>
                    Approved Items
                </th>
                <th>
                    Status
                </th>


            </tr>


        </thead>
        <tbody>
            @{
                foreach (var item in Model.MWItemDetailList)
                {
                    <tr>

                        <td>
                            @item.m_APPLICATION_DATE
                        </td>
                        <td>
                            @Model.GetAppFormCode(@item.m_APPLICATION_FORM_ID, item.isTray)
                        </td>
                        <td style="word-break:break-word ;white-space:normal">

                            @{ if (!string.IsNullOrWhiteSpace(item.m_Apply_Item))
                                {
                                    @item.m_Apply_Item
                                }
                                else
                                {
                                    @item.GetApplyMWItemApply()
                                }


                            }
                            @*@Model.GetApplyMWItemApply(@item.m_UUID)*@
                        </td>
                        <td>
                            @item.m_APPROVED_BY
                        </td>
                        <td>
                            @item.m_APPROVED_DATE
                        </td>
                        <td style="word-break:break-word ;white-space:normal">
                            @{ if (!string.IsNullOrWhiteSpace(item.m_Approved_Item))
                                {
                                    @item.m_Approved_Item
                                }
                                else
                                {
                                    @item.GetApplyMWItemApproved()
                                }


                            }
                        </td>
                        <td>
                            @item.m_STATUS_CODE
                        </td>

                    </tr>


                }


            }
        </tbody>



    </table>


</div>

<br />

<div class="panelHeader">Current MW Capability</div>
<div class="w3-row">
    <div class="w3-col l6 m12 s12">
        <div class="w3-col l6 m6 s12">
            Application Date :
        </div>
        <div class="w3-col l6 m6 s12">
            @Html.TextBoxFor(model => model.SelectedMWItemDetail.m_APPLICATION_DATE, new { @class = "inputDate" })
        </div>

    </div>
    <div class="w3-col l6 m12 s12">
        <div class="w3-col l6 m6 s12">
            Application Form:*
        </div>
        <div class="w3-col l6 m6 s12">@Html.DropDownListFor(model => model.SelectedMWItemDetail.m_APPLICATION_FORM_ID, Model.GetAppFormCodeList)</div>

    </div>
</div>
<div class="w3-row">
    <div class="w3-col l6 m12 s12">
        <div class="w3-col l6 m6 s12">
            Approved Date :
        </div>
        <div class="w3-col l6 m6 s12">
            @Html.TextBoxFor(model => model.SelectedMWItemDetail.m_APPROVED_DATE, new { @class = "inputDate" })
        </div>

    </div>
    <div class="w3-col l6 m12 s12">
        <div class="w3-col l6 m6 s12">
            Approved By :
        </div>
        <div class="w3-col l6 m6 s12">@Html.DropDownListFor(model => model.SelectedMWItemDetail.m_APPROVED_BY, Model.GetApprovedByList)</div>

    </div>
</div>







<div id="OldEditMWItemList" class="hide">
    <div style="overflow-x:auto;">
        <table class="resultTable" id="MWItemTable">
            <thead>
                <tr>
                    <th></th>
                    <th colspan="3">
                        Apply Class/ Type
                        <input type="button" name="copyApplyMWItemButton" value="Copy" onclick="copyApplyMWItem();" class="smallprint">

                    </th>
                    <th></th>
                    <th colspan="3">
                        Approved Class/ Type
                        <input type="button" name="copyMWItemButtom" value="Copy" onclick="copyMWItem();" class="smallprint">
                    </th>
                </tr>
            </thead>
            <thead>
                <tr>

                    <th>
                        Item
                    </th>
                    <th>
                        Supported by
                        Qualification Only
                    </th>
                    <th>
                        Supported by
                        Qualification and Experience
                    </th>
                    <th>
                        Supported by
                        Experience Only
                    </th>
                    <th>

                    </th>
                    <th>
                        Supported by
                        Qualification Only
                    </th>
                    <th>
                        Supported by
                        Qualification and Experience
                    </th>
                    <th>
                        Supported by
                        Experience Only
                    </th>
                </tr>


            </thead>
            <tbody>

                <tr>
                    <td align="center">
                        Select ALL
                    </td>
                    <td align="center">
                        <input type="radio" name="MWItemCheckAllRadio" id="AllQ" value="Q" ondblclick="uncheckAllMWItem(this)" onclick="checkAllMWItem(this)" />
                    </td>
                    <td align="center">
                        <input type="radio" name="MWItemCheckAllRadio" id="AllA" value="A" ondblclick="uncheckAllMWItem(this)" onclick="checkAllMWItem(this)" />
                    </td>
                    <td align="center">
                        <input type="radio" name="MWItemCheckAllRadio" id="AllE" value="E" ondblclick="uncheckAllMWItem(this)" onclick="checkAllMWItem(this)" />
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                @{
                    if (Model.SelectedMWItemDetail.SelectedApplyMWItem == null)
                    { Model.GetCurrentMWItemApplybyUUID(); }
                    if (Model.SelectedMWItemDetail.SelectedApprovedMWItem == null)
                    { Model.GetCurrentMWItemApprovedbyUUID(); }

                    int idx = 0;
                    foreach (var item in Model.GetMWItemFullList())
                    {
                        idx++;
                        //foreach (var Selecteditem in Model.GetCurrentMWItemApproved())
                        //{


                        // }


                        <tr>
                            <td>
                                @item.CODE
                            </td>
                            <td align="center">


                                @{ bool checkA = Model.SelectedMWItemDetail.SelectedApplyMWItem.Contains(@item.UUID + "A"),
                                            checkE = Model.SelectedMWItemDetail.SelectedApplyMWItem.Contains(@item.UUID + "E"),
                                            checkQ = Model.SelectedMWItemDetail.SelectedApplyMWItem.Contains(@item.UUID + "Q");
                                    string checkNull = !(checkA || checkE || checkQ) ? "checked" : "";
                                    string IsChecked = "";
                                    if (Model.SelectedMWItemDetail.SelectedApplyMWItem.Contains(@item.UUID + "Q"))
                                    { IsChecked = "checked"; }
                                }

                                <input type="radio" @IsChecked id='@("Applyitem"+@idx+"Q")' name='@("SelectedMWItemDetail.ApplyItems[" +item.UUID+"]")' ondblclick="checkRadio(this)" onclick="disableCheckAll()" value="Q" />

                            </td>
                            <td align="center">
                                @{
                                    IsChecked = "";
                                    if (Model.SelectedMWItemDetail.SelectedApplyMWItem.Contains(@item.UUID + "A"))
                                    { IsChecked = "checked"; }
                                }
                                <input type="radio" @IsChecked id='@("Applyitem"+@idx+"A")' name='@("SelectedMWItemDetail.ApplyItems[" +item.UUID+"]")' ondblclick="checkRadio(this)" onclick="disableCheckAll()" value="A" />
                            </td>
                            <td align="center">
                                @{
                                    IsChecked = "";
                                    if (Model.SelectedMWItemDetail.SelectedApplyMWItem.Contains(@item.UUID + "E"))
                                    { IsChecked = "checked"; }
                                }

                                <input type="radio" @IsChecked id='@("Applyitem"+@idx+"E")' name='@("SelectedMWItemDetail.ApplyItems[" +item.UUID+"]")' ondblclick="checkRadio(this)" onclick="disableCheckAll()" value="E" />
                            </td>
                            <td></td>
                            <td align="center">


                                @{ checkA = Model.SelectedMWItemDetail.SelectedApprovedMWItem.Contains(@item.UUID + "A");
                                    checkE = Model.SelectedMWItemDetail.SelectedApprovedMWItem.Contains(@item.UUID + "E");
                                    checkQ = Model.SelectedMWItemDetail.SelectedApprovedMWItem.Contains(@item.UUID + "Q");
                                    checkNull = !(checkA || checkE || checkQ) ? "checked" : "";
                                    IsChecked = "";
                                    if (Model.SelectedMWItemDetail.SelectedApprovedMWItem.Contains(@item.UUID + "Q"))
                                    { IsChecked = "checked"; }
                                }

                                <input type="radio" @IsChecked id='@("Approveditem"+@idx+"Q")' name='@("SelectedMWItemDetail.ApprovedItems[" +item.UUID+"]")' ondblclick="checkRadio(this)" value="Q" />

                            </td>
                            <td align="center">
                                @{
                                    IsChecked = "";
                                    if (Model.SelectedMWItemDetail.SelectedApprovedMWItem.Contains(@item.UUID + "A"))
                                    { IsChecked = "checked"; }
                                }
                                <input type="radio" @IsChecked id='@("Approveditem"+@idx+"A")' name='@("SelectedMWItemDetail.ApprovedItems[" +item.UUID+"]")' ondblclick="checkRadio(this)" value="A" />
                            </td>
                            <td align="center">
                                @{
                                    IsChecked = "";
                                    if (Model.SelectedMWItemDetail.SelectedApprovedMWItem.Contains(@item.UUID + "E"))
                                    { IsChecked = "checked"; }
                                }
                                <input type="radio" @IsChecked id='@("Approveditem"+@idx+"E")' name='@("SelectedMWItemDetail.ApprovedItems[" +item.UUID+"]")' ondblclick="checkRadio(this)" value="E" />
                            </td>
                        </tr>


                    }


                }
            </tbody>



        </table>
    </div>

</div>
<div id="NewEditMWItemList">
    <div style="overflow-x:auto;">
        <table class="resultTable">

            <thead>
                <tr>
                    <th>

                    </th>
                    <th>

                    </th>
                    <th colspan="3">
                        Supported by
                    </th>
                </tr>
                <tr>

                    <th>
                        指定工種
                    </th>
                    <th>
                        相關的小型工程項目
                    </th>
                    <th>
                        學歷
                    </th>
                    <th>
                        學歷+經驗
                    </th>
                    <th>
                        經驗
                    </th>

                </tr>


            </thead>

            <tbody>
                @{
                    Model.GetTrayMWItem();

                }


                @foreach (var item in Model.GetNewMWItemFullList())
                {
                    var isSelected = "";
                    var supportQ = "";
                    var supportA = "";
                    var supportE = "";

                    if (Model.TrayItemList.Where(x => x.MW_IND_CAPA_DISPLAY_ID == item.S_MW_IND_CAPA_ID).Count() != 0)
                    {
                        isSelected = "checked";
                        var supprtAns = Model.TrayItemList
                            .Where(x => x.MW_IND_CAPA_DISPLAY_ID == item.S_MW_IND_CAPA_ID)
                            .FirstOrDefault().SUPPORT_BY;
                        if (supprtAns == "Q")
                        {
                            supportQ = "checked";
                        }
                        else if (supprtAns == "A")
                        {
                            supportA = "checked";

                        }
                        else if (supprtAns == "E")
                        {
                            supportE = "checked";
                        }
                    }
                    <tr>
                        <td>

                            <input name="SelectedMWItemDetail.m_NewSelectedMWitem" @isSelected value="@item.UUID" type="checkbox">

                            @item.DESCRIPTION
                        </td>
                        <td>
                            @item.C_S_MW_IND_CAPA.ITEM_DESC_DISPLAY
                        </td>
                        <td align="center">



                            <input type="radio" @supportQ ondblclick="uncheckNewTrayMWItem(this)" id='"SelectedMWItemDetail.m_NewSelectedMWitemSupportedBy[@item.UUID]"+Q' name='SelectedMWItemDetail.m_NewSelectedMWitemSupportedBy[@item.UUID]' value="Q" />

                        </td>
                        <td align="center">

                            <input type="radio" @supportA ondblclick="uncheckNewTrayMWItem(this)" id='"SelectedMWItemDetail.m_NewSelectedMWitemSupportedBy[@item.UUID]"+A' name='SelectedMWItemDetail.m_NewSelectedMWitemSupportedBy[@item.UUID]' value="A" />
                        </td>
                        <td align="center">

                            <input type="radio" @supportE ondblclick="uncheckNewTrayMWItem(this)" id='"SelectedMWItemDetail.m_NewSelectedMWitemSupportedBy[@item.UUID]"+E' name='SelectedMWItemDetail.m_NewSelectedMWitemSupportedBy[@item.UUID]' value="E" />
                        </td>
                    </tr>
                }


            </tbody>


        </table>

        <div class="w3-row">
            <div class="w3-col l12 m12 s12">
                <div class="w3-col l3 m6 s12">
                    MW deleted by applicants:
                    (each item separated by , )
                </div>
                <div class="w3-col l9 m6 s12">
                    @Html.TextBoxFor(x => x.SelectedMWItemDetail.m_MWItemDeleteByApplicant)
                </div>
            </div>
        </div>
    </div>
</div>
<div class="w3-container footer">
    <button id="draftMWItemButton" class="btn btn-default" type="button"><i class="fa fa-save"></i> Draft Submit</button>
    <button id="backMWItemButton" class="btn btn-default" type="button"><i class="fa fa-arrow-left"></i> Back</button>
    <span style="float:right;">
        <button id="saveMWItemButton" class="btn btn-default" type="button"><i class="fa fa-save"></i> Confirm</button>
    </span>

</div>
