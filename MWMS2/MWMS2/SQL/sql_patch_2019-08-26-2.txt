

CREATE OR REPLACE VIEW V_CRM_INFO

(
UUID, CODE, CERTIFICATION_NO, EXPIRY_DATE, ROLE_CODE, CLASS_CODE, TYPE_CODE, CHINESE_NAME, GIVEN_NAME, SURNAME, AS_CHINESE_NAME, AS_GIVEN_NAME, AS_SURNAME, ITEM_CODE, FILE_PATH_NONRESTRICTED, FILE_PATH_RESTRICTED, MODIFIED_DATE, COMPANY_EXPIRY_DATE, CN_ADDRESS_LINE1, CN_ADDRESS_LINE2, CN_ADDRESS_LINE3, CN_ADDRESS_LINE4, CN_ADDRESS_LINE5, EN_ADDRESS_LINE1, EN_ADDRESS_LINE2, EN_ADDRESS_LINE3, EN_ADDRESS_LINE4, EN_ADDRESS_LINE5, COMP_UUID, FAX_NO, ACCEPT_DATE, AS_EXPIRY_DATE, STATUS, COMP_STATUS, DISPLAY_COMP_EXPIRY_DATE, DISPLAY_COMP_REMOVAL_DATE
, EMAIL_ADDRESS, BS_EMAIL_ADDRESS

,CONSTRAINT V_CRM_INFO_pk PRIMARY KEY (UUID) RELY DISABLE NOVALIDATE
)


AS
SELECT APP.UUID  AS UUID,
			   CAT_CODE.CODE AS CODE, 
			   CERT.CERTIFICATION_NO AS CERTIFICATION_NO, 
			    CASE  
			    WHEN CERT.EXPIRY_DATE IS NOT NULL AND CERT.REMOVAL_DATE IS NULL THEN  CERT.EXPIRY_DATE  
			    WHEN CERT.EXPIRY_DATE IS  NULL AND CERT.REMOVAL_DATE IS NOT NULL THEN  CERT.REMOVAL_DATE 
			    WHEN CERT.REMOVAL_DATE < CERT.EXPIRY_DATE THEN CERT.REMOVAL_DATE 
			    ELSE CERT.EXPIRY_DATE 
			    END  AS EXPIRY_DATE, 
			   
			   NULL AS ROLE_CODE, 
			   MW_RECORD.ITEM_CLASS AS CLASS_CODE ,  
			   MW_RECORD.ITEM_TYPE AS TYPE_CODE,  
			   APP.CHINESE_NAME AS CHINESE_NAME, 
			   APP.GIVEN_NAME_ON_ID AS GIVEN_NAME,  
			   APP.SURNAME AS SURNAME,  
			   NULL AS AS_CHINESE_NAME, 
			   NULL AS AS_GIVEN_NAME,  
			   NULL AS AS_SURNAME,  
			   MW_RECORD.ITEM_NO AS ITEM_CODE,  
			   CERT.FILE_PATH_NONRESTRICTED AS FILE_PATH_NONRESTRICTED,  
			   CERT.FILE_PATH_RESTRICTED AS FILE_PATH_RESTRICTED, 
			   SYSDATE AS MODIFIED_DATE,
			    CASE  
			    WHEN CERT.EXPIRY_DATE IS NOT NULL AND CERT.REMOVAL_DATE IS NULL THEN  CERT.EXPIRY_DATE  
			    WHEN CERT.EXPIRY_DATE IS  NULL AND CERT.REMOVAL_DATE IS NOT NULL THEN  CERT.REMOVAL_DATE 
			    WHEN CERT.REMOVAL_DATE < CERT.EXPIRY_DATE THEN CERT.REMOVAL_DATE 
			    ELSE CERT.EXPIRY_DATE 
			    END  AS COMPANY_EXPIRY_DATE, 
			   
			   CHINESE_ADDRESS.ADDRESS_LINE1 AS CN_ADDRESS_LINE1, 
			   CHINESE_ADDRESS.ADDRESS_LINE2 AS CN_ADDRESS_LINE2, 
			   CHINESE_ADDRESS.ADDRESS_LINE3 AS CN_ADDRESS_LINE3, 
			   CHINESE_ADDRESS.ADDRESS_LINE4 AS CN_ADDRESS_LINE4, 
			   CHINESE_ADDRESS.ADDRESS_LINE5 AS CN_ADDRESS_LINE5, 
			   ENGLISH_ADDRESS.ADDRESS_LINE1 AS EN_ADDRESS_LINE1, 
			   ENGLISH_ADDRESS.ADDRESS_LINE2 AS EN_ADDRESS_LINE2, 
			   ENGLISH_ADDRESS.ADDRESS_LINE3 AS EN_ADDRESS_LINE3, 
			   ENGLISH_ADDRESS.ADDRESS_LINE4 AS EN_ADDRESS_LINE4, 
			   ENGLISH_ADDRESS.ADDRESS_LINE5 AS EN_ADDRESS_LINE5, CERT.UUID AS COMP_UUID, I.FAX_NO1 AS FAX_NO   

			   ,NULL AS ACCEPT_DATE 
			   ,NULL AS AS_EXPIRY_DATE 
			   ,STATUS.ENGLISH_DESCRIPTION  AS STATUS
			   ,STATUS.ENGLISH_DESCRIPTION AS COMP_STATUS 

			   , NULL AS DISPLAY_COMP_EXPIRY_DATE 
			   , NULL AS DISPLAY_COMP_REMOVAL_DATE 
			
				, I.EMAIL AS  EMAIL_ADDRESS
			, I.BS_EMAIL AS BS_EMAIL_ADDRESS  
		
			   FROM C_APPLICANT APP, C_IND_CERTIFICATE CERT,  C_S_CATEGORY_CODE CAT_CODE, 
			    C_ADDRESS CHINESE_ADDRESS, C_ADDRESS ENGLISH_ADDRESS,C_S_SYSTEM_VALUE STATUS, 
			    (SELECT UUID, APPLICANT_ID, FAX_NO1 ,  BS_EMAIL, EMAIL,
			    CASE WHEN POST_TO='H' THEN english_home_address_id ELSE english_office_address_id END AS english_id, 
			    CASE WHEN POST_TO='H' THEN chinese_home_address_id ELSE chinese_office_address_id END AS chinese_id 
			    FROM C_IND_APPLICATION ) I 
			   LEFT OUTER JOIN  
			   (SELECT DISTINCT 
			   MASTER_ID , 
			   (SELECT VALUE.CODE FROM C_S_SYSTEM_VALUE VALUE WHERE VALUE.UUID=MW_ITEM.ITEM_CLASS_ID) AS ITEM_CLASS, 
			   (SELECT VALUE.CODE FROM C_S_SYSTEM_VALUE VALUE WHERE VALUE.UUID=MW_ITEM.ITEM_TYPE_ID) AS ITEM_TYPE, 
			   (SELECT VALUE.CODE FROM C_S_SYSTEM_VALUE VALUE WHERE VALUE.UUID=MW_ITEM.item_DETAILS_ID) AS ITEM_NO 
			   FROM C_IND_APPLICATION_MW_ITEM MW_ITEM  
			   )  MW_RECORD ON I.UUID=MW_RECORD.MASTER_ID 
			   WHERE I.UUID = CERT.MASTER_ID  
			   AND I.english_id= ENGLISH_ADDRESS.UUID 
			   AND I.chinese_id= CHINESE_ADDRESS.UUID 
			   AND I.APPLICANT_ID = APP.UUID 
			   AND CERT.CATEGORY_ID=CAT_CODE.UUID 
			   AND CERT.CERTIFICATION_NO IS NOT NULL  
			   AND STATUS.UUID = CERT.APPLICATION_STATUS_ID 


			   
			   UNION ALL 
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   SELECT  APP.UUID  AS UUID,
			   CAT_CODE.CODE AS CODE, 
			   COM.CERTIFICATION_NO AS CERTIFICATION_NO, 
			   CASE WHEN CAT_CODE.CODE = 'MWC(P)' THEN 
			   	CASE 
			   		WHEN COM.EXPIRY_DATE IS NOT NULL AND COM.REMOVAL_DATE IS NULL THEN 
			   			CASE WHEN COM.EXPIRY_DATE > TO_DATE('2012-12-31', 'YYYY-MM-DD') 
			   			THEN TO_DATE('2012-12-31', 'YYYY-MM-DD') ELSE COM.EXPIRY_DATE END 

			   		WHEN COM.EXPIRY_DATE IS NULL AND COM.REMOVAL_DATE IS NOT NULL THEN 
			   			CASE WHEN COM.REMOVAL_DATE > TO_DATE('2012-12-31', 'YYYY-MM-DD') 
			   			THEN TO_DATE('2012-12-31', 'YYYY-MM-DD') ELSE COM.REMOVAL_DATE END 

			   		WHEN COM.REMOVAL_DATE < COM.EXPIRY_DATE THEN 
			   			CASE WHEN COM.REMOVAL_DATE > TO_DATE('2012-12-31', 'YYYY-MM-DD') 
			   			THEN TO_DATE('2012-12-31', 'YYYY-MM-DD') ELSE COM.REMOVAL_DATE END 

			   		ELSE 
			   			CASE WHEN COM.EXPIRY_DATE > TO_DATE('2012-12-31', 'YYYY-MM-DD') 
			   			THEN TO_DATE('2012-12-31', 'YYYY-MM-DD') ELSE COM.EXPIRY_DATE END 
			   	END 
			   ELSE 
			   	CASE 
			   		WHEN COM.EXPIRY_DATE IS NOT NULL AND COM.REMOVAL_DATE IS NULL THEN COM.EXPIRY_DATE 
			   		WHEN COM.EXPIRY_DATE IS NULL AND COM.REMOVAL_DATE IS NOT NULL THEN COM.REMOVAL_DATE 
			   		WHEN COM.REMOVAL_DATE < COM.EXPIRY_DATE THEN COM.REMOVAL_DATE 
			   		ELSE COM.EXPIRY_DATE 
			   	END 
			   END AS EXPIRY_DATE, 
			   

			   
			   
			   INFO_ROLE.CODE AS ROLE_CODE, 
			   MW_RECORD.ITEM_CLASS AS CLASS_CODE, 
			   MW_RECORD.ITEM_TYPE AS TYPE_CODE, 
			   COM.CHINESE_COMPANY_NAME AS CHINESE_NAME, 
			   '' AS GIVEN_NAME, 
			   COM.ENGLISH_COMPANY_NAME AS SURNAME, 
			   APP.CHINESE_NAME AS AS_CHINESE_NAME, 
			   APP.GIVEN_NAME_ON_ID AS AS_GIVEN_NAME, 
			   APP.SURNAME AS AS_SURNAME, 
			   NULL AS ITEM_CODE,  
			   INFO.FILE_PATH_NONRESTRICTED AS FILE_PATH_NONRESTRICTED, 
			   INFO.FILE_PATH_RESTRICTED AS FILE_PATH_RESTRICTED, 
				

			SYSDATE AS MODIFIED_DATE,
		CASE WHEN CAT_CODE.CODE = 'MWC(P)' THEN 
			CASE 
				WHEN COM.EXPIRY_DATE IS NOT NULL AND COM.REMOVAL_DATE IS NULL THEN 
					CASE WHEN COM.EXPIRY_DATE > TO_DATE('2012-12-31', 'YYYY-MM-DD') 
					THEN TO_DATE('2012-12-31', 'YYYY-MM-DD') ELSE COM.EXPIRY_DATE END 

				WHEN COM.EXPIRY_DATE IS NULL AND COM.REMOVAL_DATE IS NOT NULL THEN 
					CASE WHEN COM.REMOVAL_DATE > TO_DATE('2012-12-31', 'YYYY-MM-DD') 
					THEN TO_DATE('2012-12-31', 'YYYY-MM-DD') ELSE COM.REMOVAL_DATE END 

				WHEN COM.REMOVAL_DATE < COM.EXPIRY_DATE THEN 
					CASE WHEN COM.REMOVAL_DATE > TO_DATE('2012-12-31', 'YYYY-MM-DD') 
					THEN TO_DATE('2012-12-31', 'YYYY-MM-DD') ELSE COM.REMOVAL_DATE END 

				ELSE 
					CASE WHEN COM.EXPIRY_DATE > TO_DATE('2012-12-31', 'YYYY-MM-DD') 
					THEN TO_DATE('2012-12-31', 'YYYY-MM-DD') ELSE COM.EXPIRY_DATE END 
			END 
		ELSE 
			CASE 
				WHEN COM.EXPIRY_DATE IS NOT NULL AND COM.REMOVAL_DATE IS NULL THEN COM.EXPIRY_DATE 
				WHEN COM.EXPIRY_DATE IS NULL AND COM.REMOVAL_DATE IS NOT NULL THEN COM.REMOVAL_DATE 
				WHEN COM.REMOVAL_DATE < COM.EXPIRY_DATE THEN COM.REMOVAL_DATE 
				ELSE COM.EXPIRY_DATE 
			END 
		END AS COMPANY_EXPIRY_DATE, 
		

		
		CHINESE_ADDRESS.ADDRESS_LINE1 AS CN_ADDRESS_LINE1, 
		CHINESE_ADDRESS.ADDRESS_LINE2 AS CN_ADDRESS_LINE2, 
		CHINESE_ADDRESS.ADDRESS_LINE3 AS CN_ADDRESS_LINE3, 
		CHINESE_ADDRESS.ADDRESS_LINE4 AS CN_ADDRESS_LINE4, 
		CHINESE_ADDRESS.ADDRESS_LINE5 AS CN_ADDRESS_LINE5, 
		ENGLISH_ADDRESS.ADDRESS_LINE1 AS EN_ADDRESS_LINE1, 
		ENGLISH_ADDRESS.ADDRESS_LINE2 AS EN_ADDRESS_LINE2, 
		ENGLISH_ADDRESS.ADDRESS_LINE3 AS EN_ADDRESS_LINE3, 
		ENGLISH_ADDRESS.ADDRESS_LINE4 AS EN_ADDRESS_LINE4, 
		ENGLISH_ADDRESS.ADDRESS_LINE5 AS EN_ADDRESS_LINE5, INFO.UUID AS COMP_UUID, COM.FAX_NO1 AS FAX_NO 
		,INFO.ACCEPT_DATE AS ACCEPT_DATE 
		,INFO.REMOVAL_DATE AS_EXPIRY_DATE 
		,STATUS.ENGLISH_DESCRIPTION  AS STATUS
		,(
		SELECT ssv_inner.ENGLISH_DESCRIPTION 
		FROM C_S_SYSTEM_VALUE ssv_inner 
		WHERE COM.APPLICATION_STATUS_ID = ssv_inner.UUID) AS COMP_STATUS 
		, COM.EXPIRY_DATE AS DISPLAY_COMP_EXPIRY_DATE 
		, COM.REMOVAL_DATE AS DISPLAY_COMP_REMOVAL_DATE 
		, COM.EMAIL_ADDRESS AS EMAIL_ADDRESS 
, COM.BS_EMAIL_ADDRESS AS BS_EMAIL_ADDRESS 
		
		FROM  
		C_COMP_APPLICATION COM  
		INNER JOIN C_ADDRESS ENGLISH_ADDRESS ON COM.ENGLISH_ADDRESS_ID=ENGLISH_ADDRESS.UUID 
		INNER JOIN C_ADDRESS CHINESE_ADDRESS ON COM.CHINESE_ADDRESS_ID=CHINESE_ADDRESS.UUID 
		
		INNER JOIN C_S_CATEGORY_CODE CAT_CODE ON COM.CATEGORY_ID=CAT_CODE.UUID  
		AND COM.CERTIFICATION_NO IS NOT NULL  

		LEFT OUTER JOIN C_COMP_APPLICANT_INFO INFO ON  COM.UUID=INFO.MASTER_ID  
		INNER JOIN C_S_SYSTEM_VALUE INFO_ROLE  ON INFO.APPLICANT_ROLE_ID=INFO_ROLE.UUID AND INFO_ROLE.CODE LIKE 'A%' 
		INNER JOIN C_APPLICANT APP  ON INFO.APPLICANT_ID=APP.UUID  
		LEFT JOIN C_S_SYSTEM_VALUE STATUS ON INFO.APPLICANT_STATUS_ID = STATUS.UUID 
		LEFT OUTER JOIN  
		( SELECT DISTINCT MW_ITEM.COMPANY_APPLICANTS_ID,  
		  (SELECT VALUE.CODE FROM C_S_SYSTEM_VALUE VALUE WHERE VALUE.UUID=MW_ITEM.ITEM_CLASS_ID) AS ITEM_CLASS, 
		  (SELECT VALUE.CODE FROM C_S_SYSTEM_VALUE VALUE WHERE VALUE.UUID=MW_ITEM.ITEM_TYPE_ID) AS ITEM_TYPE 
		  FROM C_COMP_APPLICANT_MW_ITEM MW_ITEM  
		) MW_RECORD ON INFO.UUID=MW_RECORD.COMPANY_APPLICANTS_ID;

